<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.samsung.practice</groupId>
    <artifactId>DesignPattern</artifactId>
    <version>1.0</version>
    <name>DesignPattern</name>
    <description>Samsung Best Practice - DP</description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>
    <repositories>
        <repository>
            <id>maven2</id>
            <url>http://repo1.maven.org/maven2/</url>
        </repository>
        <repository>
            <id>sonatype</id>
            <url>http://repository.sonatype.org/content/groups/public/</url>
        </repository>
        <!-- 
        <repository>
            <id>jboss</id>
            <url>http://repository.jboss.com/maven2/</url>
        </repository>
        -->
        <repository>
            <id>ibiblio</id>
            <url>http://mirrors.ibiblio.org/pub/mirrors/maven2/org/acegisecurity/</url>
        </repository>
    </repositories>

    <dependencies>
        <dependency>
            <groupId>org.antlr</groupId>
            <artifactId>antlr4-runtime</artifactId>
            <version>4.1</version>
        </dependency>
            
        <!--
        <dependency>  
            <groupId>org.antlr</groupId>  
            <artifactId>antlr-runtime</artifactId>  
            <version>4.1.1</version>  
            <scope>compile</scope>  
        </dependency>  
        -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.10</version>
        </dependency>

        <dependency>
            <groupId>com.googlecode.json-simple</groupId>
            <artifactId>json-simple</artifactId>
            <version>1.1</version>
            <type>jar</type>
        </dependency>
    </dependencies>


    <build>
        <sourceDirectory>src</sourceDirectory>
        <testSourceDirectory>test</testSourceDirectory>
        <resources>
            <resource>
                <directory>res</directory>
            </resource>
        </resources>
        
        <!-- Include other files as resources files. -->  
        <!-- Filter jdbc.properties & mail.properties. NOTE: We don't filter applicationContext-infrastructure.xml, let it go with spring's resource process mechanism. -->  
<!--
<resources> 
    <resource>  
        <directory>src/main/resources</directory>  
        <filtering>true</filtering>  
        <includes>  
            <include>jdbc.properties</include>  
            <include>mail.properties</include>  
        </includes>  
    </resource>  

            <resource>  
                <directory>src/main/resources</directory>  
                <filtering>false</filtering>  
                <excludes>  
                    <exclude>jdbc.properties</exclude>  
                    <exclude>mail.properties</exclude>  
                </excludes>  
            </resource>  
        </resources>
        -->
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>